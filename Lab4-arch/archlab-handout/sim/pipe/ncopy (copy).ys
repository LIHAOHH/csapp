#/* $begin ncopy-ys */
##################################################################
# ncopy.ys - Copy a src block of len words to dst.
# Return the number of positive words (>0) contained in src.
#
# Include your name and ID here.
#
# Describe how and why you modified the baseline code.

##################################################################
# Do not modify this portion
# Function prologue.
# %rdi = src, %rsi = dst, %rdx = len
ncopy:

##################################################################
# You can modify this portion
	# Loop header
	xorq %rax,%rax		# count = 0; dengyu=0meisuan
	iaddq $-9,%rdx
	jl   L
Loop1: 	mrmovq (%rdi), %r8
	mrmovq 8(%rdi), %r9
	mrmovq 24(%rdi), %r11			
	mrmovq 32(%rdi), %r12
	mrmovq 16(%rdi), %r10
	
	andq %r8, %r8	
	rmmovq %r8, (%rsi)	
	jle Npos1			
	iaddq $1, %rax		
Npos1:	
	andq %r9, %r9		
	rmmovq %r9, 8(%rsi)	
	jle Npos2			
	iaddq $1, %rax		
Npos2:		
	andq %r10, %r10		
	rmmovq %r10, 16(%rsi)	
	jle Npos3			
	iaddq $1, %rax		
Npos3:	
	andq %r11, %r11		
	rmmovq %r11, 24(%rsi)	
	jle Npos4			
	iaddq $1, %rax		
Npos4:	
	andq %r12, %r12	
	rmmovq %r12, 32(%rsi)	
	jle Npos5			
	iaddq $1, %rax		
Npos5:	
	mrmovq 40(%rdi), %r8		
	mrmovq 48(%rdi), %r9
	mrmovq 56(%rdi), %r10	
	mrmovq 64(%rdi), %r11
	andq %r8, %r8	
	rmmovq %r8, 40(%rsi)	
	jle Npos6			
	iaddq $1, %rax		
Npos6:	
	andq %r9, %r9	
	rmmovq %r9, 48(%rsi)	
	jle Npos7			
	iaddq $1, %rax		
Npos7:	
	andq %r10, %r10		
	rmmovq %r10, 56(%rsi)	
	jle Npos8			
	iaddq $1, %rax		
Npos8:	
	andq %r11, %r11		
	rmmovq %r11, 64(%rsi)	
	jle Npos9			
	iaddq $1, %rax		
Npos9:	
	iaddq $72,%rdi
	iaddq $72,%rsi
	iaddq $-9,%rdx
	jge   Loop1


L:
	iaddq  $9,%rdx
	iaddq  $-3,%rdx
	jl   L1
Loop2: 	mrmovq (%rdi), %r8		
	mrmovq 8(%rdi), %r9
	mrmovq 16(%rdi), %r10

	andq %r8, %r8		
	rmmovq %r8, (%rsi)	
	jle Nposa			
	iaddq $1, %rax		
Nposa:	
	andq %r9, %r9	
	rmmovq %r9, 8(%rsi)	
	jle Nposb			
	iaddq $1, %rax		
Nposb:		
	andq %r10, %r10		
	rmmovq %r10, 16(%rsi)	
	jle Nposc			
	iaddq $1, %rax		
Nposc:	
				
	iaddq $24,%rdi
	iaddq $24,%rsi	
	iaddq $-3,%rdx
	jge   Loop2

L1:     iaddq $3,%rdx
	je Done
	iaddq $-2,%rdx
	mrmovq (%rdi), %r8		
	jl   Loop

	mrmovq 8(%rdi), %r9
	andq %r8, %r8		
	rmmovq %r8, (%rsi)	
	jle Npose			
	iaddq $1, %rax		
Npose:	
	andq %r9, %r9	
	rmmovq %r9, 8(%rsi)	
	jle Nposf			
	iaddq $1, %rax		
Nposf:	 ret
	
	
		

Loop:	
	andq %r8, %r8		# val <= 0?
	rmmovq %r8, (%rsi)	# ...and store it to dst
	jle Done		# if so, goto Npos:	
	iaddq $1, %rax		# count++	
##################################################################
# Do not modify the following section of code
# Function epilogue.
Done:
	ret
##################################################################
# Keep the following label at the end of your function
End:
#/* $end ncopy-ys */
